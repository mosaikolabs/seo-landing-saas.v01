---
// src/components/ui/Modal.astro
interface Props {
  id: string;
  title: string;
  description?: string;
  closeOnClickOutside?: boolean;
  closeOnEsc?: boolean;
  showCloseButton?: boolean;
  size?: 'sm' | 'md' | 'lg' | 'xl';
  className?: string;
}

const {
  id,
  title,
  description = '',
  closeOnClickOutside = true,
  closeOnEsc = true,
  showCloseButton = true,
  size = 'md',
  className = '',
  ...rest
} = Astro.props;

const sizes = {
  sm: 'max-w-md',
  md: 'max-w-2xl',
  lg: 'max-w-4xl',
  xl: 'max-w-6xl',
};

const modalId = id || `modal-${Math.random().toString(36).substr(2, 9)}`;
---

<div 
  id={modalId}
  class="fixed inset-0 z-50 overflow-y-auto hidden"
  aria-labelledby="modal-title"
  role="dialog"
  aria-modal="true"
  data-close-on-outside={closeOnClickOutside}
  data-close-on-esc={closeOnEsc}
  {...rest}
>
  <div class="flex min-h-screen items-end justify-center px-4 pb-20 pt-4 text-center sm:block sm:p-0">
    <div 
      class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity modal-overlay"
      aria-hidden="true"
      data-modal-overlay
    ></div>
    <span class="hidden sm:inline-block sm:h-screen sm:align-middle" aria-hidden="true">&#8203;</span>

    <div 
      class={`inline-block transform overflow-hidden rounded-lg bg-white text-left align-bottom shadow-xl transition-all sm:my-8 sm:w-full sm:align-middle ${sizes[size]} ${className}`}
      role="dialog"
      aria-modal="true"
      aria-labelledby="modal-title"
      aria-describedby="modal-description"
    >
      <div class="bg-white px-4 pb-4 pt-5 sm:p-6 sm:pb-4">
        <div class="sm:flex sm:items-start">
          <div class="mt-3 text-center sm:ml-4 sm:mt-0 sm:text-left w-full">
            <div class="flex justify-between items-start">
              <h3 class="text-lg font-medium leading-6 text-gray-900" id="modal-title">
                Obtenga un análisis SEO GRATIS de $497...
              </h3>
              {showCloseButton && (
                <button 
                  type="button" 
                  class="text-gray-400 hover:text-gray-500 focus:outline-none"
                  data-modal-close
                  aria-label="Cerrar modal"
                >
                  <span class="sr-only">Cerrar</span>
                  <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                  </svg>
                </button>
              )}
            </div>
            <div class="mt-2">
              <p class="text-sm text-gray-500 mb-4">Todos los campos son obligatorios</p>
              <form id="analisis-form" class="space-y-4">
                <div>
                  <label for="name" class="block text-sm font-medium text-gray-700 mb-1">Nombre completo <span class="text-red-500">*</span></label>
                  <input type="text" id="name" name="name" placeholder="Tu nombre completo" required 
                    class="w-full border px-3 py-2 rounded focus:ring-2 focus:ring-primary/50 focus:border-primary" />
                </div>
                <div>
                  <label for="website" class="block text-sm font-medium text-gray-700 mb-1">Sitio web <span class="text-red-500">*</span></label>
                  <input type="url" id="website" name="website" placeholder="https://tusitio.com" required 
                    class="w-full border px-3 py-2 rounded focus:ring-2 focus:ring-primary/50 focus:border-primary" />
                </div>
                <div>
                  <label for="keywords" class="block text-sm font-medium text-gray-700 mb-1">Palab clave <span class="text-red-500">*</span></label>
                  <textarea id="keywords" name="keywords" placeholder="Escribe al menos 10 palabras clave deseadas" required 
                    class="w-full border px-3 py-2 rounded focus:ring-2 focus:ring-primary/50 focus:border-primary" rows="3"></textarea>
                </div>
                <div>
                  <label for="social" class="block text-sm font-medium text-gray-700 mb-1">Redes sociales <span class="text-red-500">*</span></label>
                  <input type="text" id="social" name="social" placeholder="Ej: @usuario" required 
                    class="w-full border px-3 py-2 rounded focus:ring-2 focus:ring-primary/50 focus:border-primary" />
                </div>
                <div>
                  <label for="email" class="block text-sm font-medium text-gray-700 mb-1">Correo electrónico <span class="text-red-500">*</span></label>
                  <input type="email" id="email" name="email" placeholder="tu@email.com" required 
                    class="w-full border px-3 py-2 rounded focus:ring-2 focus:ring-primary/50 focus:border-primary" />
                </div>
                <div id="form-message" class="hidden py-2 px-3 rounded text-sm"></div>
                <button type="submit" id="submit-btn" 
                  class="w-full bg-primary text-white font-semibold py-2 rounded hover:bg-primary/90 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary/50 transition-colors">
                  <span class="flex items-center justify-center">
                    <span id="submit-text">Enviar solicitud</span>
                    <svg id="submit-spinner" class="hidden animate-spin -mr-1 ml-2 h-4 w-4 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                      <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                      <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                    </svg>
                  </span>
                </button>
              </form>
            </div>
          </div>
        </div>
      </div>
      <div class="bg-gray-50 px-4 py-3 sm:flex sm:flex-row-reverse sm:px-6">
        <slot name="footer">
          <button 
            type="button" 
            class="inline-flex w-full justify-center rounded-md bg-primary px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-primary/90 focus:outline-none focus:ring-2 focus:ring-primary/50 focus:ring-offset-2 sm:ml-3 sm:w-auto"
            data-modal-close
          >
            Cerrar
          </button>
        </slot>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('analisis-form');
    const submitBtn = document.getElementById('submit-btn');
    const submitText = document.getElementById('submit-text');
    const submitSpinner = document.getElementById('submit-spinner');
    const formMessage = document.getElementById('form-message');

    if (form) {
      form.addEventListener('submit', async (e) => {
        e.preventDefault();
        
        // Mostrar estado de carga
        submitBtn.disabled = true;
        submitText.textContent = 'Enviando...';
        submitSpinner.classList.remove('hidden');
        formMessage.classList.add('hidden');
        
        try {
          // Recolectar datos del formulario
          const formData = {
            nombre: document.getElementById('name').value.trim(),
            website: document.getElementById('website').value.trim(),
            keywords: document.getElementById('keywords').value.trim(),
            social: document.getElementById('social').value.trim(),
            email: document.getElementById('email').value.trim(),
            fecha: new Date().toISOString(),
            origen: 'Formulario de Análisis SEO'
          };
          
          // Validar que no haya campos vacíos
          for (const [key, value] of Object.entries(formData)) {
            if (!value) {
              throw new Error('Por favor completa todos los campos obligatorios');
            }
          }
          
          // URL del webhook de Make.com
          const webhookUrl = 'https://hook.us2.make.com/dfv9sal4s3wtu5lhyoughogonypo1bmm';
          
          // Enviar datos al webhook
          const response = await fetch(webhookUrl, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify(formData),
          });
          
          if (response.ok) {
            // Mostrar mensaje de éxito
            showMessage('¡Solicitud enviada con éxito! Redirigiendo...', 'success');
            
            // Limpiar formulario después de un envío exitoso
            form.reset();
            
            // Redirigir a la página de agradecimiento después de 1.5 segundos
            setTimeout(() => {
              // Cerrar el modal
              const modal = document.getElementById('analisis-seo-modal');
              if (modal) {
                modal.classList.add('hidden');
                document.body.style.overflow = '';
              }
              // Redirigir a la página de agradecimiento
              window.location.href = '/thank-you';
            }, 1500);
          } else {
            throw new Error('Error al enviar el formulario');
          }
        } catch (error) {
          console.error('Error:', error);
          showMessage('Hubo un error al enviar tu solicitud. Por favor, inténtalo de nuevo más tarde.', 'error');
        } finally {
          // Restaurar estado del botón
          submitBtn.disabled = false;
          submitText.textContent = 'Enviar solicitud';
          submitSpinner.classList.add('hidden');
        }
      });
    }
    
    function showMessage(message, type) {
      formMessage.textContent = message;
      formMessage.className = 'block py-2 px-3 rounded text-sm';
      
      if (type === 'success') {
        formMessage.classList.add('bg-green-100', 'text-green-700');
      } else {
        formMessage.classList.add('bg-red-100', 'text-red-700');
      }
      
      formMessage.classList.remove('hidden');
      formMessage.scrollIntoView({ behavior: 'smooth', block: 'nearest' });
    }
  });
</script>
